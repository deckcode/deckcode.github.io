{"meta":{"title":"noticase","subtitle":"sky of case","description":"personl technology blog","author":"skycase","url":"https://darktom.gitee.io","root":"/"},"pages":[{"title":"404","date":"2018-09-30T09:25:30.000Z","updated":"2020-11-13T09:15:14.810Z","comments":true,"path":"404.html","permalink":"https://darktom.gitee.io/404.html","excerpt":"","text":""},{"title":"about","date":"2020-10-01T04:00:00.000Z","updated":"2020-11-13T09:10:28.657Z","comments":true,"path":"about/index.html","permalink":"https://darktom.gitee.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-10-01T04:00:00.000Z","updated":"2020-11-13T09:08:39.403Z","comments":true,"path":"categories/index.html","permalink":"https://darktom.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"contact","date":"2020-11-13T09:10:42.000Z","updated":"2020-11-13T09:11:03.145Z","comments":true,"path":"contact/index.html","permalink":"https://darktom.gitee.io/contact/index.html","excerpt":"","text":""},{"title":"friends","date":"2020-11-13T09:12:13.000Z","updated":"2020-11-13T09:20:09.738Z","comments":true,"path":"friends/index.html","permalink":"https://darktom.gitee.io/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-10-01T04:00:00.000Z","updated":"2020-11-13T09:09:44.243Z","comments":true,"path":"tags/index.html","permalink":"https://darktom.gitee.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"优化踩坑","slug":"优化踩坑","date":"2020-12-14T16:37:02.000Z","updated":"2020-11-15T04:49:21.142Z","comments":true,"path":"2020/12/15/you-hua-cai-keng/","link":"","permalink":"https://darktom.gitee.io/2020/12/15/you-hua-cai-keng/","excerpt":"@TOC npm安装插件Hexo 安装插件注意：需要使用超级权限在你的博客（hexoblog）目录下生成 npm/cnpm 安装你的plugin ，否则会安装在其他路径导致plugin没有安装到对应博客目录下的 node_mudules中，对应也就无法使用该插件。","text":"@TOC npm安装插件Hexo 安装插件注意：需要使用超级权限在你的博客（hexoblog）目录下生成 npm/cnpm 安装你的plugin ，否则会安装在其他路径导致plugin没有安装到对应博客目录下的 node_mudules中，对应也就无法使用该插件。 1. hexo使用玩偶以及关闭玩偶参考 2.使用评论系统gitment使用valine使用 3.添加RSS功能hexo博客安装RSS插件 4.顶部背景朦胧效果关闭在 themes/source/css/matery.css下的581~585 行左右。将其注释掉就行 .bg-cover:after { -webkit-animation: rainbow 60s infinite;*/ animation: rainbow 60s infinite;*/ } 5.文章插入视频 模板 &lt;div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">&lt;iframe src=\"//player.bilibili.com/player.html?aid=39807850&amp;cid=69927212&amp;page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> &lt;/iframe>&lt;/div> test 用其官方自带的tag plugins 将其打包.目的让以后重复工作减少。 官方文档介绍 1.先在该路径下注册自己的标签 2.实现标签内容代码 相同路径下创建 bili.js 'use script' function bili2(args){ const id = args[0]; return '&lt;div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">&lt;iframe ' + 'src=\"//player.bilibili.com/player.html?'+id+'\" scrolling=\"no\" border=\"0\" ' + 'frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; ' + 'height: 100%; left: 0; top: 0;\"> &lt;/iframe>&lt;/div>'; } module.exports = bili2; 或者 'use strict'; const { htmlTag } = require('hexo-util'); /* '&lt;div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">&lt;iframe ' + 'src=\"//player.bilibili.com/player.html?'+id+'\" scrolling=\"no\" border=\"0\" ' + 'frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; ' + 'height: 100%; left: 0; top: 0;\"> &lt;/iframe>&lt;/div>'; */ function bili(args){ const id = args[0]; const attrs = { src: '//player.bilibili.com/player.html?'+id, style: 'position: absolute; width: 100%; height: 100%; left: 0; top: 0;', frameborder: '0', framespacing: 'no' , border: 'no', scrolling: 'no', allowfullscreen: true }; const iframetag = htmlTag('iframe',attrs,''); const attrs2 = { style : 'position: relative; width: 100%; height: 0; padding-bottom: 75%;' } return htmlTag('div', attrs2, iframetag,false); } module.exports = bili; 使用{% bili bili视频id %} test 1 bili使用 {% bili aid=286010105&amp;bvid=BV1zf4y1y7us&amp;cid=201500951&amp;page=1 %} 2 自带的iframe标签 {% iframe //player.bilibili.com/player.html?aid=286010105&amp;bvid=BV1zf4y1y7us&amp;cid=201500951&amp;page=1 %} 3 bili2使用 {% bili2 aid=286010105&amp;bvid=BV1zf4y1y7us&amp;cid=201500951&amp;page=1 %} 6.文章推荐 安装 hexo-recommended-posts插件 cnpm install hexo-recommended-posts --save hexo recommend即可 7.baidu analyze 增添文章访问统计参考文章 会报以下错误: 代码安装错误您所选的站点首页安装了账户”che***gsp”的站点”pur****.cn”对应的代码（站点ID后四位93ef）若确认站点设置、选择无误，则建议在标签前添加当前所选站点”darktom.gitee.io”对应的代码 参照这篇文章排错 确实发现自己没有添加baidu analyze 却有 hm.js 请求，查看原有代码的值这是设计作者在默认你没有开启 baidu analyze功能情况下用的作者 的id，也就是当你开启自己的功能后，不关闭作者的baidu analyze请求，那么自己的实际数据（网站访问人数，次数）就不能显示出来，所以。 找到当前位置将红线部分注释掉即可 推荐文章（由hexo文章推荐插件驱动）hexo图片插入问题hexo官方文档hexo 参考Hexo 5.2.0 更新记录","categories":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/tags/hexo/"}]},{"title":"hexo图片插入问题","slug":"hexo图片插入问题","date":"2020-12-13T18:41:35.000Z","updated":"2020-11-14T06:32:57.397Z","comments":true,"path":"2020/12/14/hexo-tu-pian-cha-ru-wen-ti/","link":"","permalink":"https://darktom.gitee.io/2020/12/14/hexo-tu-pian-cha-ru-wen-ti/","excerpt":"","text":"参考 推荐文章（由hexo文章推荐插件驱动）优化踩坑hexo官方文档hexo 参考Hexo 5.2.0 更新记录","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/tags/hexo/"}]},{"title":"hexo官方文档","slug":"hexo官方文档","date":"2020-11-16T07:07:13.000Z","updated":"2020-11-14T07:15:45.919Z","comments":true,"path":"2020/11/16/hexo-guan-fang-wen-dang/","link":"","permalink":"https://darktom.gitee.io/2020/11/16/hexo-guan-fang-wen-dang/","excerpt":"","text":"test地址 引用本地图片 引用外网图片1 图床 推荐文章（由hexo文章推荐插件驱动）优化踩坑hexo图片插入问题hexo 参考Hexo 5.2.0 更新记录","categories":[{"name":"个人静态博客网站搭建","slug":"persblogNet","permalink":"https://darktom.gitee.io/categories/persblogNet/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/tags/hexo/"}]},{"title":"video","slug":"video","date":"2020-11-13T17:40:18.000Z","updated":"2020-11-13T17:40:18.969Z","comments":true,"path":"2020/11/14/video/","link":"","permalink":"https://darktom.gitee.io/2020/11/14/video/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"hexo 参考","slug":"hexo-参考","date":"2020-11-13T16:58:43.000Z","updated":"2020-11-13T17:59:00.542Z","comments":true,"path":"2020/11/14/hexo-can-kao/","link":"","permalink":"https://darktom.gitee.io/2020/11/14/hexo-can-kao/","excerpt":"","text":"参考hexo 插入视频和音乐播放器 Hexo折腾之添加 - 评论打赏、动态玩偶、点击红心、网易云音乐、分享功能、崩溃欺骗 推荐文章（由hexo文章推荐插件驱动）优化踩坑hexo图片插入问题hexo官方文档Hexo 5.2.0 更新记录","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/tags/hexo/"}]},{"title":"","slug":"asss","date":"2020-11-13T08:34:22.381Z","updated":"2020-11-08T00:33:45.956Z","comments":true,"path":"2020/11/13/asss/","link":"","permalink":"https://darktom.gitee.io/2020/11/13/asss/","excerpt":"","text":"@TOC 一般文本框：input sendkeys();//输入内容 clear();//清除内容 getAttribute 获取元素属性 单选框 radio 复选框 checkbox click clear （清除选中状态） isSelected 查看是否被选中 按钮 button / 超链接 a click isEnabled 查看是否可以操作 复杂组合键操作一般使用click方法，如果是chrome浏览器，点击超链接 同时按ctrl会打开新标签，shift打开新的窗口。 Actions a = new Actions(driver);//点击按下 a.keyDown(Keys.CONTROL).perform(); driver.findElement(By.xpath(\"\")).click(); a.keyUp(Keys.CONTROL).perform();//点解结束 组合鼠标操作 鼠标左键点击 (可以来打开二级菜单) Actions action = new Actions(driver);action.click();// 鼠标左键在当前停留的位置做单击操作 action.click(element)// 鼠标左键点击指定的元素 action.contextclick(element)//;鼠标右键点击指定元素 action.doubleClick(element);//鼠标双击元素 鼠标移动操作 (可以来打开二级菜单) action.moveToElement(element);// 将鼠标移到 element 元素中点 action.moveToElement(element,xOffset,yOffset) //表示以当前element相对移动的位移量 鼠标长按操作 action.clickAndHold();// 鼠标悬停在当前位置，既点击并且不释放 action.clickAndHold(Element);// 鼠标悬停在 Element 元素的位置 鼠标释放操 action.release();// 释放鼠标 鼠标拖拽动作 action.dragAndDrop(source,target); //将source元素拖拽到target action.dragAndDrop(source,xOffset,yOffset); //可以由以上简单操作组合 action.clickAndHold(source).moveToElement(target).perform(); action.release(); //或者 action.clickAndHold(source).moveToElement(target).release().build().perform(); 文件上传按钮input 类型的 ，一般定位元素 ，然后sendkeys（文件的绝对路径）。复杂类型的selenium + python 文件上传 alert对话框处理有三种 alert prompt confirm alert confirm相同 1.Alert alert = driver.switchTo().alert();alert.accept();alert.dismiss();alert.getText(); //获取alert的内容 prompt (有提示内容和输入框) 获取alert相同通过sendKeys()输入内容 select菜单，选择项 获取WebElement element = driver.finElement( select 的 Xpath);Select select = new Select(element);选择selectByIndex(index);selectByVisibleText(String text); 通过匹配到的字符selectByValue(String value);通过匹配 标签的vlaue属性 Window/Tag切换driver.getWindowHandle();返会字符串，获取当前窗口的句柄 driver.getWindowHandles();返回Set&lt;String> 获取所有的窗口 driver.switchTo().window(窗口的String); 来跳转窗口（无论是新的标签还是新的浏览器窗口都可以通过此方法跳转）。 注意窗口间切换，要关闭窗口时，不能使用 qiut（quit driver就释放了，不能使用driver，close只是关闭当前window 或者 标签 还可以使用driver，当然close最后一个窗口或者标签时就会关闭浏览器 此时driver也不会有效） 滚动定位到特定元素位置JavascriptExecutor scroll = (JavascriptExecutor) driver; scroll.executeScript(\"arguments[0].scrollIntoView();\", 指定元素); Navigation可以通过driver.get(新的URL)进行网址跳转，也可以通过Navigation的to（新的url）实现。 Navigation n= driver.navigate(); n.back(); delay(2000); n.refresh(); delay(2000); n.forward(); delay(2000); n.to(\"http://www.icourse163.org/home.htm?userId=1400999509#/home/course\"); delay(2000); n.to(\"https://www.baidu.com/s?tn=02049043_8_pg&amp;ch=7&amp;ie=utf-8&amp;wd=selenium%20%E6%93%8D%E4%BD%9C%E8%BF%9B%E5%BA%A6%E6%9D%A1\"); iframe1.有id，并且唯一，直接写id driver.switchTo().frame(\"iframe_id\");、、//通过iframe的id或者name属性进行定位 2.有name，并且唯一，直接写name driver.switchTo().frame(\"iframe_name\"); 3.无id，无name,先定位iframe元素 driver.swtichTo().frame(Webelement);//通过（目标iframe）webelement元素进行定位 driver.switchTo().frame(iframe_index);//没有以上属性也可以通过 通过下标（整个html文档中第几个iframe）定位到iframe driver.switchTo().defaultContent();//切回主文档 driver.switch_to.parent_frame();//从当前iframe切回父iframe 如果当前已是主文档，则无效果 参考： selenium切换到iframe Selenium WebDriver 中鼠标事件","categories":[],"tags":[]},{"title":"","slug":"att","date":"2020-11-13T08:34:22.375Z","updated":"2020-11-08T00:32:59.451Z","comments":true,"path":"2020/11/13/att/","link":"","permalink":"https://darktom.gitee.io/2020/11/13/att/","excerpt":"","text":"例题代码 import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.interactions.Actions; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.Select; import org.openqa.selenium.support.ui.WebDriverWait; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import java.util.concurrent.TimeUnit; import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; public class Example { // Mooctest Selenium Example // &lt;!> Check if selenium-standalone.jar is added to build path. public static void delay(int a) { try { Thread.sleep(a); } catch (InterruptedException e) { // TODO 自动生成的 catch 块 e.printStackTrace(); } } public static void register(WebDriver d) { // d.get(\"http://114.215.176.95:60505/FindU/html/index.jsp\"); // d.findElement(By.xpath(\"/html/body/header/div[1]/div[2]/ul/li[1]/a[3]\")).click(); // d.findElement(By.xpath(\"//*[@id=\\\"Name\\\"]\")).sendKeys(\"skybos\"); // d.findElement(By.xpath(\"//*[@id=\\\"Email\\\"]\")).sendKeys(\"233@qq.com\"); // d.findElement(By.xpath(\"//*[@id=\\\"Tel\\\"]\")).sendKeys(\"18376542345\"); // d.findElement(By.xpath(\"//*[@id=\\\"Regist\\\"]/input[4]\")).sendKeys(\"123456\"); // d.findElement(By.xpath(\"//*[@id=\\\"Regist\\\"]/input[5]\")).sendKeys(\"123456\"); // d.findElement(By.xpath(\"//*[@id=\\\"Regist\\\"]/div/span/label/input\")).click(); // d.findElement(By.xpath(\"//*[@id=\\\"Regist\\\"]/input[6]\")).click(); } public static void login(WebDriver d) { // WebElement e = wait(d, 10, By.name(\"Name\")); delay(200); // d.findElement(By.xpath(\"/html/body/header/div/div[2]/ul/li[1]/a[2]\")).click(); // delay(200); e.sendKeys(\"233@qq.com\"); delay(200); d.findElement(By.name(\"Password\")).sendKeys(\"123456\"); delay(5000); d.findElement(By.xpath(\"//*[@id=\\\"agileits-sign-in-page\\\"]/div/form/input[3]\")).click(); System.out.println(\"失物招领\"); } public static WebElement wait(WebDriver d, int sec, By by) { WebDriverWait wait = new WebDriverWait(d, sec,1000); return wait.until(ExpectedConditions.presenceOfElementLocated(by)); } public static void test(WebDriver d) { // d.get(\"https://jingyan.baidu.com/article/75ab0bcb7237cbd6864db208.html\"); // // WebElement e = // d.findElement(By.xpath(\"/html/body/div[3]/section/div[4]/div/ul/li[3]/a\")); // // JavascriptExecutor js = (JavascriptExecutor) d; // js.executeScript(\"arguments[0].scrollIntoView()\", e); // // delay(4000); // // TODO Test script // eg:driver.get(\"https://www.baidu.com/\") // eg:driver.findElement(By.id(\"wd\")); // 页面长时间加载不玩 // d.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); // 页面加载策略 // stoptLoad st= new stoptLoad(d,8); //// st.start(); // d.get(\"http://114.215.176.95:60505/FindU\"); // // d.manage().window().maximize(); //// //// d.manage().timeouts().pageLoadTimeout(10, TimeUnit.SECONDS); // // // delay(15000); // //// .execute_script(\"window.stop()\"); //// d.manage().timeouts().pageLoadTimeout(10, TimeUnit.SECONDS); // // register // // login(d); // // // System.out.println(\"失物招领\"); // 页面加载 d.get(\"http://114.215.176.95:60505/FindU/html/signin.jsp\"); login(d); delay(3000); // 失物招领 // page load WebElement e = wait(d, 10, By.className(\"post-w3layouts-ad\")); System.out.println(e.getText() + \"fgfg\"); e.click(); // page load e = wait(d, 10, By.name(\"Option\")); delay(200); Select s = new Select(e); s.selectByValue(\"身份证\"); delay(200); d.findElement(By.xpath(\"//*[@id=\\\"information\\\"]/input\")).sendKeys(\"身份证招领\"); delay(200); d.findElement(By.xpath(\"//*[@id=\\\"information\\\"]/textarea\")).sendKeys(\"体育场丢失的1000元丰富路，顺丰到付。\"); delay(200); // 時間选择 动态id // &lt;input name=\"act_start_time\" type=\"text\" class=\"text-box hasDatepicker\" // placeholder=\"点击选择时间\" readonly=\"readonly\" style=\"cursor:pointer;\" value=\"\" // id=\"dp1604753164762\"> d.findElement(By.name(\"act_start_time\")).click(); delay(2000); d.findElement(By.xpath(\"//*[@id=\\\"ui-datepicker-div\\\"]/table/tbody/tr[6]/td[1]/a\")).click(); e = d.findElement(By.xpath(\"//*[@id=\\\"ui-datepicker-div\\\"]/div[2]/dl/dd[2]/div/a\")); Actions ac = new Actions(d); ac.dragAndDropBy(e, 50,0).perform(); delay(200); e= d.findElement(By.xpath(\"//*[@id=\\\"ui-datepicker-div\\\"]/div[2]/dl/dd[3]/div\")); ac.dragAndDropBy(e, 50,0).perform(); delay(4000); d.findElement(By.xpath(\"//*[@id=\\\"ui-datepicker-div\\\"]/div[3]/button[2]\")).click(); // d.findElement(By.name(\"GetSite\")).sendKeys(\"篮球程2序化仓\"); d.findElement(By.name(\"Contact\")).sendKeys(\"120123123123\"); e = d.findElement(By.name(\"Value\")); e.sendKeys(\"2000\"); JavascriptExecutor js = (JavascriptExecutor) d; js.executeScript(\"arguments[0].scrollIntoView()\", e); d.findElement(By.id(\"fileselect\")).sendKeys(\"D:\\\\平滑滤波.png\"); d.findElement(By.xpath(\"//*[@id=\\\"information\\\"]/div[5]/input[5]\")).click(); delay(3000); // d.close(); } public static void main(String[] args) { // Run main function to test your script. DesiredCapabilities caps = DesiredCapabilities.chrome(); caps.setCapability(\"pageLoadStrategy\", \"none\"); WebDriver driver = new ChromeDriver(); try { test(driver); } catch (Exception e) { e.printStackTrace(); } finally { driver.quit(); } } } 当加载页面时间很长时，导致之后的代码执行不到或者超时，就看下面文章。 method1 // 加载不完页面 driver卡死情况 自动设置线程停止加载事件 public static class stoptLoad extends Thread{ WebDriver driver = null; int sec = 0; public stoptLoad(WebDriver driver,int sec){ this.driver = driver; this.sec = sec; } @Override public void run() { try { Thread.sleep(sec*1000); } catch (InterruptedException e) { e.printStackTrace(); } ((JavascriptExecutor) driver).executeScript(\"window.stop();\"); } [参考文章-ChromeDriver PageLoadStrategy 使用配置](http://www.cocoachina.com/articles/33241) 2. method2 ```java DesiredCapabilities caps = DesiredCapabilities.chrome(); caps.setCapability(\"pageLoadStrategy\", \"eager\"); WebDriver driver = new ChromeDriver(); //使用eager加载page方式 //搭配wait //三个参数分别是 driver实例，超时时长(秒)，轮询间隔（毫秒） WebDriverWait webDriverWait = new WebDriverWait(driver,5,1000); WebDriverWait wait=new WebDriverWait(d,10); wait.until(ExpectedConditions.presenceOfElementLocated( By.xpath(\"/html/body/header/div[2]/div/div[2]/a\"))); //用在加载页面时 封装好 public static WebElement wait(WebDriver d, int sec,By by) { WebDriverWait wait=new WebDriverWait(d,sec); return wait.until(ExpectedConditions.presenceOfElementLocated(by)); } //匿名内部类方式 webDriverWait.until(new Predicate&lt;WebDriver>() { @Override //会在延迟时间内，每次轮询执行此方法， public boolean apply(WebDriver webDriver) { System.out.println(\"Predicate等待\"); return false; } }); /*该方法没有返回值，也不会抛出异常，等待的最长时间就是用户设置的超时时长 */ 第二个方法 返回值是一个泛型类型 V ，参数是一个函数接口 Function&lt;? super T, V> 其中 ? super T 表示该参数必须是T或T的父类 。 V 表示该参数和返回值是相同的类型 WebElement ele = webDriverWait.until(new Function&lt;WebDriver, WebElement>() { @Override public WebElement apply(WebDriver webDriver) { return driver.findElement(By.xpath(\".//a[text()='新闻']\")); } }); 上面的方法会一直尝试查找元素，直到找到符合定位条件的元素出现在DOM树中，并返回该元素的对象。这个显示等待方法的作用和隐式等待功能是类似的 我们把它改造一下，换成一个找不到的元素看看 参考文章——Selenium隐式等待与显示等待的选择 当加载页面空白页时或者404（并不是每次都是加载不出来）参考文章-ajax请求失败 chrome报错net::ERR_INCOMPLETE_CHUNKED_ENCODING 问题原因 元素搜索快慢方法比较 ID： id显然是选择元素的最优选属性（除非生成了该元素）。 名称/标记名：这也是查找元素的最快方法。 名称/标记名：此定位器很好地用于查找具有相同名称的多个元素。 Linktext / PartialLinkText-定位器非常适合导航活动。 CSS vs Xpath -","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-11-13T05:31:42.836Z","updated":"2020-11-13T05:31:42.836Z","comments":true,"path":"2020/11/13/hello-world/","link":"","permalink":"https://darktom.gitee.io/2020/11/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hexo 添加分类及标签","slug":"test","date":"2019-04-24T07:40:24.000Z","updated":"2020-11-13T16:14:50.747Z","comments":true,"path":"2019/04/24/test/","link":"","permalink":"https://darktom.gitee.io/2019/04/24/test/","excerpt":"","text":"njdfg dgdfgsdfsd function(){ alert(sd) } 推荐文章（由hexo文章推荐插件驱动）给博客添加视频","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://darktom.gitee.io/categories/Hexo/"}],"tags":[{"name":"博客","slug":"博客","permalink":"https://darktom.gitee.io/tags/%E5%8D%9A%E5%AE%A2/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/categories/hexo/"},{"name":"个人静态博客网站搭建","slug":"persblogNet","permalink":"https://darktom.gitee.io/categories/persblogNet/"},{"name":"Hexo","slug":"Hexo","permalink":"https://darktom.gitee.io/categories/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://darktom.gitee.io/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://darktom.gitee.io/tags/%E5%8D%9A%E5%AE%A2/"}]}